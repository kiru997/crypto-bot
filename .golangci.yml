#####
# To use this golangci-lint configuration
# add the following to .vscode/settings.json of golang repo
# {
#  "go.lintTool": "golangci-lint",
#  "go.lintFlags": [
#    "-c",
#    "~/thuynga/common/.golangci.yml", //your absolute path
#    "--issues-exit-code=0"
#  ]
# }
#
# check here for more config: https://golangci-lint.run/usage/linters/
################################

run:
  tests: false
  concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 20m
  skip-dirs:
    - mock
    - tools
    - swag

fast: true
linters:
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - decorder
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    # - exhaustive
    # - exhaustivestruct
    # - exhaustruct // check struct mising field
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - grouper
    - importas
    - ineffassign
    - interfacebloat
    # - lll
    - loggercheck
    - maintidx
    - makezero
    # - maligned // struct size
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - nonamedreturns
    # - nosnakecase
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagliatelle
    - tenv
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign
    - whitespace
    # - wrapcheck error wrap check
    - wsl
linters-settings:
  # wsl:
  #   allow-assign-and-anything: true
  #   allow-separated-leading-comment: true
  #   allow-cuddle-declarations: true
  #   force-err-cuddling: true
  tagliatelle:
    case:
        # Use the struct field name to check the name of the struct tag.
        # Default: false
        use-field-name: false
        rules:
          # Any struct tag type can be used.
          # Support string case: `camel`, `pascal`, `kebab`, `snake`, `upperSnake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`, `header`.
          json: snake
          bson: snake
          env: upperSnake
          yaml: snake
          yml: snake
          envconfig: upperSnake
  # funlen:
  # lines: -1
